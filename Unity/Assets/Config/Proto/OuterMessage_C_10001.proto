syntax = "proto3";
package ET;

message HttpGetRouterResponse
{
	repeated string Realms = 1;
	repeated string Routers = 2;
}

message RouterSync
{
	uint32 ConnectId = 1;
	string Address = 2;
}

// ResponseType M2C_TestResponse
message C2M_TestRequest // ILocationRequest
{
	int32 RpcId = 1;
	string request = 2;
}

message M2C_TestResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string response = 4;
}

// ResponseType G2C_EnterMap
message C2G_EnterMap // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_EnterMap // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	/// 自己的UnitId
	int64 MyId = 4;
}

message MoveInfo
{
	repeated Unity.Mathematics.float3 Points = 1;
	Unity.Mathematics.quaternion Rotation = 2;
	int32 TurnSpeed = 3;
}

message UnitInfo
{
	int64 UnitId = 1;
	int32 ConfigId = 2;
	int32 Type = 3;
	Unity.Mathematics.float3 Position = 4;
	Unity.Mathematics.float3 Forward = 5;
	map<int32, int64> KV = 6;
	MoveInfo MoveInfo = 7;
}

message M2C_CreateUnits // IMessage
{
	repeated UnitInfo Units = 1;
}

message M2C_CreateMyUnit // IMessage
{
	UnitInfo Unit = 1;

	repeated HeroCardInfo HeroCardInfos = 2;

	repeated TroopInfo TroopInfos = 3;
}

message M2C_StartSceneChange // IMessage
{
	int64 SceneInstanceId = 1;
	string SceneName = 2;
}

message M2C_RemoveUnits // IMessage
{
	repeated int64 Units = 1;
}

message C2M_PathfindingResult // ILocationMessage
{
	int32 RpcId = 1;
	Unity.Mathematics.float3 Position = 2;
}

message C2M_Stop // ILocationMessage
{
	int32 RpcId = 1;
}

message M2C_PathfindingResult // IMessage
{
	int64 Id = 1;
	Unity.Mathematics.float3 Position = 2;
	repeated Unity.Mathematics.float3 Points = 3;
}

message M2C_Stop // IMessage
{
	int32 Error = 1;
	int64 Id = 2;
	Unity.Mathematics.float3 Position = 3;
	Unity.Mathematics.quaternion Rotation = 4;
}

// ResponseType G2C_Ping
message C2G_Ping // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_Ping // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 Time = 4;
}


message G2C_Test // ISessionMessage
{
}

// ResponseType M2C_Reload
message C2M_Reload // ISessionRequest
{
	int32 RpcId = 1;
	string Account = 2;
	string Password = 3;
}

message M2C_Reload // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType R2C_Login
message C2R_Login // ISessionRequest
{
	int32 RpcId = 1;
	string  Account = 2;  // 帐号
	string  Password = 3;  // 密码
}

message R2C_Login // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string Address = 4;
	int64 Key = 5;
	int64 GateId = 6;
	repeated ServerInfo ServerInfos = 7;
	repeated RoleInfo RoleInfos = 8;

}
message RoleInfo
{
	int64 RoleId = 1;
	int32 HeroConfigId = 2;
	string RoleName = 3;
	int32 ZoneConfigId = 4;
	int64 LastLoginStamp = 5;
}

message ServerInfo
{
	int32 ZoneConfigId = 1;
	int32 ServerState = 2;
	string ServerName = 3;
	int64 StartTime = 4; //服务器开启时间
}


// ResponseType G2C_LoginGate
message C2G_LoginGate // ISessionRequest
{
	int32 RpcId = 1;
	int64 Key = 2;  // 帐号
	int64 GateId = 3;
	int32 ZoneConfigId = 4;
}

message G2C_LoginGate // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 PlayerId = 4;
}



message G2C_TestHotfixMessage // ISessionMessage
{
	string Info = 1;
}

// ResponseType M2C_TestRobotCase
message C2M_TestRobotCase // ILocationRequest
{
	int32 RpcId = 1;
	int32 N = 2;
}

message M2C_TestRobotCase // ILocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int32 N = 4;
}

message C2M_TestRobotCase2 // ILocationMessage
{
	int32 RpcId = 1;
	int32 N = 2;
}

message M2C_TestRobotCase2 // ILocationMessage
{
	int32 RpcId = 1;
	int32 N = 2;
}

// ResponseType M2C_TransferMap
message C2M_TransferMap // ILocationRequest
{
	int32 RpcId = 1;
}

message M2C_TransferMap // ILocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType G2C_Benchmark
message C2G_Benchmark // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_Benchmark // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

message HeroCardInfo
{
	int64 HeroId = 1;

	int32 Level = 2;

	int32 ConfigId = 3;

	repeated string DataKeys = 4;

	repeated float DataValues = 5;
}
//ResponseType M2C_CreateOneHeroByConfigId
message C2M_CreateOneHeroByConfigId // ILocationRequest 
{
	int32 RpcId = 1;
	int32 ConfigId = 2;

}
message M2C_CreateOneHeroByConfigId // ILocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;

	HeroCardInfo HeroCardInfo = 1;
}

//ResponseType M2C_DestroyHeroByIdResponse
message C2M_DestroyHeroByIdRequest //ILocationRequest
{
	int32 RpcId = 1;

	int64 HeroId = 2;
	
}
message M2C_DestroyHeroByIdResponse //ILocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}


message TroopInfo 
{
	int64 TroopId = 1;

	repeated int64 HeroCardIds = 2;

}

//ResponseType M2C_SetHeroFormation
message C2M_SetHeroFormation // ILocationRequest
{
	int32 RpcId = 1;
	int64 HeroCardId = 2;
	int32 Index = 3;
	int64 TroopId = 4;
}

message M2C_SetHeroFormation // ILocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType M2C_UnSetHeroFormation
message C2M_UnSetHeroFromation // ILocationRequest
{
	int32 RpcId = 1;
	int64 TroopId = 2;
	int32 Index = 3;

}
message M2C_UnSetHeroFormation // ILocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}